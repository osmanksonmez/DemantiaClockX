name: Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.3
  workflow_dispatch:  # Allows manual trigger
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.3)'
        required: true
        default: 'v1.0.3'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_NAME=${VERSION#v}" >> $GITHUB_OUTPUT
        
    - name: Find Pre-built APK
      id: find_apk
      run: |
        APK_FILE="DemantiaClockX-${{ steps.version.outputs.VERSION }}-release.apk"
        if [ -f "$APK_FILE" ]; then
          echo "APK_PATH=$APK_FILE" >> $GITHUB_OUTPUT
          echo "‚úÖ Found pre-built APK: $APK_FILE"
          ls -la "$APK_FILE"
        else
          echo "‚ùå APK file not found: $APK_FILE"
          echo "Available APK files:"
          ls -la *.apk || echo "No APK files found"
          exit 1
        fi
           
    - name: Read Release Notes
      id: release_notes
      run: |
        if [ -f "RELEASE_NOTES_${{ steps.version.outputs.VERSION }}.md" ]; then
          RELEASE_NOTES=$(cat "RELEASE_NOTES_${{ steps.version.outputs.VERSION }}.md")
        else
          RELEASE_NOTES="Release ${{ steps.version.outputs.VERSION }}"
        fi
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release and Upload APK
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: "DemantiaClockX ${{ steps.version.outputs.VERSION }}"
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        files: |
          ${{ steps.find_apk.outputs.APK_PATH }}
          RELEASE_NOTES_${{ steps.version.outputs.VERSION }}.md
        draft: false
        prerelease: false
        
    - name: Notify Success
      run: |
        echo "‚úÖ Release ${{ steps.version.outputs.VERSION }} created successfully!"
        echo "üì¶ APK: DemantiaClockX-${{ steps.version.outputs.VERSION }}-release.apk"
        echo "üîó Check the release at: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}"